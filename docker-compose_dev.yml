# https://docs.docker.com/compose/yml/
# Each service defined in docker-compose.yml must specify exactly one of
# image or build. Other keys are optional, and are analogous to their
# docker run command-line counterparts.
#
# As with docker run, options specified in the Dockerfile (e.g., CMD,
# EXPOSE, VOLUME, ENV) are respected by default - you don't need to
# specify them again in docker-compose.yml.
#

version: '3.7'

services:
  pfcon_service:
    image: ${PFCONREPO}/pfcon:dev
    volumes:
      - ./pfcon:/home/localuser/pfcon/pfcon:z
      - ./bin/pfcon:/home/localuser/pfcon/bin/pfcon:z
      - ./tests:/home/localuser/pfcon/tests:z
    ports:
      - "5006:5005"
    depends_on:
      - pman_service
      - pfioh_service
    networks:
      - remote
    labels:
      name: "pfcon"
      role: "PF controller, part of the CHRIS backend."
    # command: ["--verbosity", "1", "--httpProxy", "http://proxy.tch.harvard.edu:3128"]
    command: ["--ip", "0.0.0.0", "--verbosity", "1"]

  pfioh_service:
    # The following is a bit complicated... Basically we need to map a physical dir
    # in the HOST to the key store in pfioh. The keystore is specified by the
    # --storeBase flag.
    image: ${PFIOHREPO}/pfioh${TAG}
    command: ["--forever", "--ip", "0.0.0.0", "--port", "5055", "--httpResponse", "--createDirsAsNeeded", "--storeBase", "/hostFS/storeBase", "--verbosity", "1"]
    volumes:
      - ${STOREBASE}:/hostFS/storeBase:z
    ports:
      - "5056:5055"
    networks:
      remote:
        aliases:
          - pfioh.remote
    labels:
      name: "pfioh"
      role: "pfioh service"

  pman_service:
    # Since pman spins off containers of its own it needs to mount storeBase dir (where
    # pfioh shares the data) into the spawned container. However, it can't mount a dir
    # inside itself to the spawned container, it has to mount an actual existing
    # directory in the host. This directory is passed in the STOREBASE env variable.
    environment:
      - STOREBASE
      - SECRET_KEY="w1kxu^l=@pnsf!5piqz6!!5kdcdpo79y6jebbp+2244yjm*#+k"
      - CONTAINER_ENV=swarm
    image: ${PMANREPO}/pman${TAG}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:z
    ports:
      - "5011:5010"
    networks:
      remote:
        aliases:
          - pman.remote
    labels:
      name: "pman"
      role: "pman service"


networks:
  remote:
