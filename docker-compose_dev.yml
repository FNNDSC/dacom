# https://docs.docker.com/compose/yml/
# Each service defined in docker-compose.yml must specify exactly one of
# image or build. Other keys are optional, and are analogous to their
# docker run command-line counterparts.
#
# As with docker run, options specified in the Dockerfile (e.g., CMD,
# EXPOSE, VOLUME, ENV) are respected by default - you don't need to
# specify them again in docker-compose.yml.
#

version: '3.7'

services:
  pfcon_service:
    image: ${PFCONREPO}/pfcon:dev
    volumes:
      - ./pfcon:/home/localuser/pfcon/pfcon
      - ./bin/pfcon:/home/localuser/pfcon/bin/pfcon
      - ./tests:/home/localuser/pfcon/tests
    ports:
      - "5006:5005"
    depends_on:
      - pman_service
      - pfioh_service
    networks:
      - remote
    labels:
      name: "pfcon"
      role: "PF controller, part of the CHRIS backend."
    # command: ["--verbosity", "1", "--httpProxy", "http://proxy.tch.harvard.edu:3128"]
    command: ["--verbosity", "1"]

  pfioh_service:
    # The following is a bit complicated... Basically we need to map a physical dir
    # in the HOST to the key store in pfioh. The keystore is specified by the
    # --storeBase flag.
    image: ${PFIOHREPO}/pfioh${TAG}
    command: ["--forever", "--httpResponse", "--createDirsAsNeeded", "--storeBase", "/hostFS/storeBase", "--verbosity", "1"]
    volumes:
      - ./FS/remote:/hostFS/storeBase
    ports:
      - "5056:5055"
    networks:
      remote:
        aliases:
          - pfioh.remote
    labels:
      name: "pfioh"
      role: "pfioh service"

  pman_service:
    # pman also needs access to the pfioh storeBase folder (and hence the volume)
    # mapping from the HOST file system space.
    #
    # There is however an extra twist. Since pman spins off containers of its
    # own, it needs to mount this storeBase dir into the spawned container.
    # However, it can't mount a dir inside itself to the spawned container,
    # it has to mount an actual existing directory. This directory is
    # passed in the STOREBASE env variable, and will override the base
    # mapping of SHAREDIR inside pman to the swarm manager. Note that the
    # full path to the spawned container should be ${STOREBASE} + keyStore!
    environment:
      - STOREBASE
    image:  ${PMANREPO}/pman${TAG}
    command: ["--rawmode", "1", "--http", "--port", "5010", "--listeners", "12", "--verbosity", "1"]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./FS/remote:/hostFS/storeBase
    ports:
      - "5011:5010"
    networks:
      remote:
        aliases:
          - pman.remote
    labels:
      name: "pman"
      role: "pman service"


networks:
  remote:
